<?php

/**
 * Implements hook_menu().
 */
function synch_users_from_external_database_menu() {
  $items['user/synch'] = array(
    'title' => '',
    'page callback' => 'start_synch_users_from_external_database',
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Executing synch
 */
function start_synch_users_from_external_database() {
  watchdog ("synch_users_from_external_database","Users synch started");

  $queue_for_synch_users_from_external_database = DrupalQueue::get('queue_for_synch_users');
  $queues['$queue_for_synch_users'] = array(
    'worker callback' => 'queue_for_synch_users_process',
    'time' => 10,
	'skip on cron' => TRUE,
  );
  
  // Check number of items in queue
  if ($queue_for_synch_users_from_external_database->numberOfItems()) {
	// Queue is not empty, begin executing items  
	$number_entries_in_queue = $queue_for_synch_users_from_external_database->numberOfItems();
    watchdog ("synch_users_from_external_database","The queue is not empty and has " . $number_entries_in_queue . " records. Begin executing records...");
	
  } else
  {
	// Queue is empty, begin fill queue items
	watchdog ("synch_users_from_external_database","The queue is empty, fetching data from external database");
 	
	$users = array(
      array(
        "login" => "user001",
        "fullname" => "fullname001",
        "email" => "user001@user.user",
        "personnel_number" => "001"
      ),
      array(
        "login" => "user002",
        "fullname" => "fullname002",
        "email" => "user002@user.user",
        "personnel_number" => "002"
      ),
      array(
        "login" => "user003",
        "fullname" => "fullname003",
        "email" => "user003@user.user",
        "personnel_number" => "003"
      ),
	  array(
        "login" => "user004",
        "fullname" => "fullname004",
        "email" => "user004@user.user",
        "personnel_number" => "004"
      ),
	  array(
        "login" => "user005",
        "fullname" => "fullname005",
        "email" => "user005@user.user",
        "personnel_number" => "005"
      )
    );	
	
    foreach ( $users as $user ) {
      $queue_for_synch_users->createItem($user);
	  watchdog("synch_users_from_external_database","Add item to row " . $user['login']);
    }
	$number_entries_in_queue = $queue_for_synch_users->numberOfItems();
  }  
}

function queue_for_synch_users_process($data) {
  watchdog("synch_users_from_external_database","Execute record in queue");
}

/**
 * Get users data
 */
function get_users_data() {
  $users_source_database = array(
  'host' => 'localhost', 
  'database' => 'db-name',
  'username' => 'db-username', 
  'password' => 'db-password', 
  'driver' => 'mysql',
  );
  
  Database::addConnectionInfo('synch_users_from_external_database', 'default', $users_source_database);
  
  db_set_active('synch_users_from_external_database');
  
  db_set_active();
}
 
/**
 * Create user
 */
function create_user($user_data) {
  user_save(NULL, array(
    'name' => $user_data["login"],
    'mail' => $user_data["email"],
    'init' => $user_data["email"],
	'field_user_full_name' => array(LANGUAGE_NONE => array(array('value' => $user_data["personnel_number"]))),
    'status' => 1,
    'roles' => array(DRUPAL_AUTHENTICATED_RID => TRUE),
  ));
  
  watchdog("synch_users_from_external_database","Create user with login: " . $user_data["login"]);
}

/**
 * Update user
 */
function update_users($uid, $user_data) {

}
