<?php

/**
 * Implements hook_cron_queue_info().
 * 30 sec - Queue fill and 9031 remaining -> 6283 -> 3554 -> 692
 */
function synch_users_cron_queue_info() {
  $queue['synch_users_queue'] = array(
    'worker callback' => 'synch_users_item_process',
    'time' => 30,
  );
  return $queue;
}

/**
 * Implements hook_cron().
 */
function synch_users_cron() {
  // Create queue
  $queue = DrupalQueue::get('synch_users_queue'); 
  watchdog("synch_users","Executing synch employees, remaining: " . $queue->numberOfItems());
  // Check if queue is empty - fill them
  if ($queue->numberOfItems() == 0) {
	// Connect to source database with employees information
    $connect_mysql = new mysqli("localhost", "mysql", "mysql", "dblink_oracle");
	$sql = "SELECT login, email, personnel_number FROM company_employees";
	$results = $connect_mysql->query($sql);
	if ($results->num_rows > 0) {
      while($result = $results->fetch_assoc()) {
		// Add item to queue
        $queue->createItem($result);
	  }
    }
	$connect_mysql->close();
  }
}

/**
 * Process queue item.
 */
function synch_users_item_process($data) {
  // Search existing user by personnel number, if founded - update
  $uids = db_query("
    SELECT u.uid FROM {users} u INNER JOIN {field_data_field_user_personnel_number} f
    ON u.uid = f.entity_id WHERE f.field_user_personnel_number_value = :personnel_number",
    array(':personnel_number' => $data['personnel_number']))->fetchAll();
  if ($uids) {
    foreach ($uids as $uid) {
	  // Update founded existing users
      update_user($uid->uid,$data);
    }
  } else {
	// Create new users
	create_user($data);
    }
}

/**
 * Create user.
 */
function create_user($data) {
  user_save(NULL, array(
    'name' => $data["login"],
    'mail' => $data["email"],
    'init' => $data["email"],
	'field_user_personnel_number' => array(LANGUAGE_NONE => array(array('value' => $data["personnel_number"]))),
    'status' => 1,
    'roles' => array(DRUPAL_AUTHENTICATED_RID => TRUE),
  ));
}

/**
 * Update user.
 */
function update_user($uid,$data) {
  $user_fields = user_load($uid); 
  $user_fields->name = $data['login'];
  $user_fields->mail = $data['email'];
  user_save($user_fields);
}
